name: Check Court Availability

on:
  schedule:
    - cron: '*/30 * * * *' # cada 30 minutos
  workflow_dispatch: # permite ejecutar manualmente desde la UI
  push:
    branches: [ main ] # También ejecutar en push para test

permissions:
  contents: read

jobs:
  check-availability:
    runs-on: ubuntu-latest
    env:
      EMAIL_SENDER: ${{ secrets.EMAIL_SENDER }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
      EMAIL_RECIPIENTS: ${{ secrets.EMAIL_RECIPIENTS }}
      # Configuración de disponibilidad de canchas
      CHECK_INTERVAL_MINUTES: '30'
      DAYS_TO_CHECK: 'MO,TU,WE,TH,FR'
      EARLIEST_HOUR: '17'
      EARLIEST_MINUTE: '30'
      # Configuración de horarios de ejecución
      # IMPORTANTE: GitHub Actions corre en UTC, ajustar según tu zona horaria
      # Argentina (UTC-3): 7 AM = 10 AM UTC, 11 PM = 2 AM UTC (día siguiente)
      # Para otras zonas horarias, calcular el offset correspondiente
      RUN_START_HOUR: '10'  # 7 AM Argentina (UTC-3)
      RUN_END_HOUR: '2'     # 11 PM Argentina (UTC-3)
      # Configuración para evitar notificaciones duplicadas
      NOTIFICATION_TTL_HOURS: '24'  # Recordar turnos por 24 horas
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Restore notification history
        uses: actions/cache/restore@v3
        id: cache-restore
        with:
          path: notified-slots.json
          key: notification-history-${{ github.run_id }}
          restore-keys: |
            notification-history-

      - name: Install dependencies
        run: npm ci

      - name: Compile TypeScript
        run: npx tsc

      - name: Run script
        run: node dist/index.js

      - name: Save notification history
        uses: actions/cache/save@v3
        if: always()  # Guardar incluso si el script falla
        with:
          path: notified-slots.json
          key: notification-history-${{ github.run_id }}
